name: env-output

on:
  workflow_call:
    inputs: 
      force_start:
        default: 'false'
        type: string
    outputs:
      in_progress_check:
        value: ${{ jobs.validation.outputs.in_progress_check }}
      branch_check:
        value: ${{ jobs.validation.outputs.branch_check }}
jobs:
  validation:
    runs-on: ubuntu-latest
    outputs:
      in_progress_check: ${{ env.in_progress_check }}
      branch_check: ${{ env.branch_check }}
    steps:
      - uses: actions/checkout@v3

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: in_progress_check
        id: in_progress
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          in_progress_check=$(gh run list --workflow '${{github.workflow}}' --json status -q '.[].status' | grep in_progress | wc -l)
          echo "in_progress_check=${in_progress_check}" >> $GITHUB_ENV
          echo $in_progress_check
          if [[ $in_progress_check -ne '1' ]]; then
            echo "현재 배포중인 작업이 있습니다."
            exit 1
          fi
      - name: branch_check
        id: branch
        if: github.workflow == '운영 배포' || '🚀🚀 운영 배포'
        run: |
          if [[ '${{ github.ref}}' == 'refs/heads/main' ]]; then
            echo "branch_check=1" >> $GITHUB_ENV
          else 
            echo "운영 배포는 마스터만 가능합니다."
            echo "branch_check=0" >> $GITHUB_ENV
            exit 1
          fi
          echo $branch_check
      - name: force_start
        id: validation
        if: always() && inputs.force_start == 'true'
        run: |
          echo $in_progress_check
          echo $branch_check
          if [[ '${{ inputs.force_start}}' == 'true' ]]; then
            echo "in_progress_check=1" >> $GITHUB_ENV
            echo "branch_check=1" >> $GITHUB_ENV
          fi
          echo $in_progress_check
          echo $branch_check
      - name: final
        if: always()
        run: |
          echo ${{env.in_progress_check}}
          echo ${{env.branch_check}}