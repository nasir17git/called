name: Reusable Workflow

on:
  workflow_call:
    inputs:
      aaa:
        required: true
        type: string
      bbb:
        required: true
        type: string
      
        
jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: zip
        id: zip
        run: |
          pwd
          ls -alh
          echo "---"
          cp deploy/* tmp_for_upload/
          if [ "${{ inputs.aaa }}" ] && [ -f "tmp_for_upload/codedeploy-start.sh" ]; then
            sed -i "s/__aaa__/${{ inputs.aaa }}/g" -i tmp_for_upload/codedeploy-start.sh
            # EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            # echo "aaa<<$EOF" >> $GITHUB_ENV
            # cat tmp_for_upload/codedeploy-start.sh >> $GITHUB_ENV
            # echo "$EOF" >> $GITHUB_ENV
          fi
          if [ "${{ inputs.aaa }}" ] && [ "${{ inputs.bbb }}" ] && [ -f "tmp_for_upload/restart.sh" ]; then
            sed -i "s/__aaa__/${{ inputs.aaa }}/g" -i tmp_for_upload/restart.sh
            sed -i "s/__bbb__/${{ inputs.bbb }}/g" -i tmp_for_upload/restart.sh
            cat tmp_for_upload/restart.sh
            # EOF2=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            # echo "bbb<<$EOF2" >> $GITHUB_ENV
            # cat tmp_for_upload/restart.sh >> $GITHUB_ENV
            # echo "$EOF2" >> $GITHUB_ENV
          fi
          cat tmp_for_upload/codedeploy-start.sh
          echo "---"
          cat tmp_for_upload/restart.sh


      - name: failed_detail
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "failed_detail<<$EOF" >> $GITHUB_ENV
          cat gradle_build.log | grep -E -B 3 -A 3 '^e:' >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV
  
      - name: msg
        run: |
          if [[ "true" == 'true' ]]; then
            if [[ "true" == 'true' ]]; then
              EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
              echo "failed_slack_message<<$EOF" >> $GITHUB_ENV
              echo " gradle f ❌ failed msg" >> $GITHUB_ENV
              echo "```" >> $GITHUB_ENV
              echo "${{ env.failed_detail }}" >> $GITHUB_ENV
              echo "```" >> $GITHUB_ENV
              echo "$EOF" >> $GITHUB_ENV
            fi
          fi

      - name: Post to Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'C05J50BRRB3'  # Replace with your Slack channel ID or name
          payload: |
            {
              "text": "1. ${{ env.aaa }} \n 2. ${{ env.bbb }} \n 3. ${{ env.failed_slack_message }},""
              "attachments": [
                {
                  "color": "#36a64f",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "aaa bbb  ${{ env.failed_slack_message }} "
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": " bbb  ${{ env.failed_slack_message }} "
                      }
                    },
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}