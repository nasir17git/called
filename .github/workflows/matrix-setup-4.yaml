name: Matrixsetup workflow v4

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        required: true
        type: string
      PROJECT_NAME:
        type: string
      MODULE_ALL:
        type: string
      ALL:
        type: string
    outputs:
      matrix:
        value: ${{ jobs.setup.outputs.matrix }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ env.mat_list }}
    steps:
      - uses: actions/checkout@v3

      - name: main 
        run: |
          if [ ${{ inputs.MODULE_ALL }} == "true" ]; then
            filtered_modules=$(cat inputs.json | jq 'with_entries(select(.key | startswith("DEPLOY_"))) | to_entries | map({module: .key})')
            mat_list="{\"include\":$filtered_modules}"
            matrix_with_sed=$(echo "$mat_list" | sed 's/DEPLOY_//g')
            echo $matrix_with_sed >> matrix.json
          else 
            filtered_modules=$(cat inputs.json | jq -r 'with_entries(select(.key | startswith("DEPLOY_"))) | to_entries | map(select(.value == true)) | map({module: .key})')
            mat_list="{\"include\":$filtered_modules}"
            matrix_with_sed=$(echo "$mat_list" | sed 's/DEPLOY_//g')
            echo $matrix_with_sed >> matrix.json
          fi

          cat matrix.json
          echo "mat_list=$(cat matrix.json)" >> $GITHUB_ENV

      # - name: transfer_json
      #   run: |
      #     echo "--- 기존 입력"
      #     cat matrix.json >> $GITHUB_ENV
      
      - name: check
        run: |
          echo "${{env.mat_list}}" 
          

